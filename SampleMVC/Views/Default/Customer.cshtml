@model SampleMVC.ViewModel.CustomerViewModel

@{
    ViewBag.Title = "Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customer</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.HiddenFor(model => model.customerid)
   @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.customername, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.customername, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.customername, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phonenumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.status, new List<SelectListItem>
       { new SelectListItem{Text="Active", Value="Active"},
         new SelectListItem{Text="Deactive", Value="Deactive"}}, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.area, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.addservices, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 " >
            <table class="form-control overflow-auto h-auto">
                @for (int i = 0; i < Model.addservices.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.CheckBoxFor(m => Model.addservices[i].Selected, new { htmlAttributes = new { @class = "custom-control-input" } }) &nbsp; 
                        </td>
                        <td>
                            @Html.DisplayFor(m => Model.addservices[i].Text, new { htmlAttributes = new { @class = "custom-control-label" } })
                            @Html.HiddenFor(m => Model.addservices[i].Value)
                            @Html.HiddenFor(m => Model.addservices[i].Text)
                        </td>
                    </tr>
                }
            </table>


        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-primary" />
            @Html.ActionLink("Cancel", "Dashboard", null, htmlAttributes: new { @class = "btn btn-danger" })
        </div>
    </div>
</div>
}
<br />

<div>
    @Html.ActionLink("Back to List", "Dashboard",null, htmlAttributes: new { @class = "btn btn-warning" })
</div>
